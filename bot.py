import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–≤—Å—Ç–∞–≤—å —Å–≤–æ–π!)
BOT_TOKEN = "7619623685:AAGvQJSzN9gIGJflsqNyV2CDijdYczhxh14"

# –ê–¥—Ä–µ—Å —Ç–≤–æ–µ–≥–æ TON-–∫–æ—à–µ–ª—å–∫–∞ (–∫–∞–∑–Ω–∞—á–µ–π—Å–∫–∏–π)
WALLET_ADDRESS = "UQAtOwZBJX-V_0tJHXwOXrOI-7I7T6EJ21UOk4TShQenh1os"

# ID –∫–∞–Ω–∞–ª–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, @viktor_news)
REQUIRED_CHANNEL = "@viktor_news"

# –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∑–∞–¥–∞–Ω–∏–µ
REWARD_AMOUNT = "0.01"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub")]
    ])

    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n\n"
        f"–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª {REQUIRED_CHANNEL}, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚Äî –∏ –ø–æ–ª—É—á–∏ {REWARD_AMOUNT} TON –Ω–∞ —Å–≤–æ–π –∫–æ—à–µ–ª—ë–∫!",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
@dp.callback_query(lambda c: c.data == "check_sub")
async def check_subscription(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª
        chat_member = await bot.get_chat_member(REQUIRED_CHANNEL, user_id)
        if chat_member.status in ["member", "administrator", "creator"]:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥ TON
            ton_link = f"https://t.me/wallet?startattach=transfer&address={WALLET_ADDRESS}&amount={int(float(REWARD_AMOUNT) * 10**9)}&text=Reward+for+subscription"
            await callback_query.message.answer(
                f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω!\n\n"
                f"–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å {REWARD_AMOUNT} TON:\n\n"
                f"üîó [–ü–æ–ª—É—á–∏—Ç—å {REWARD_AMOUNT} TON]({ton_link})",
                parse_mode="Markdown",
                disable_web_page_preview=False
            )
        else:
            await callback_query.answer("‚ùå –¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!", show_alert=True)
    except Exception as e:
        await callback_query.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∫–∞–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –±–æ—Ç –≤ –Ω—ë–º –∞–¥–º–∏–Ω.", show_alert=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
